name: daily
on:
  schedule:
  - cron: 0 1 * * *
  workflow_dispatch:
env:
  AWS_REGION: xxxxst-2
  CACHE_VERSION: xxxx
  NPM_TOKEN: xxxx5775
  SNYK_TOKEN: xxxxa727
  TWINE_NON_INTERACTIVE: xxxx
  TWINE_PASSWORD: xxxxi3Xc
  TWINE_REPOSITORY_URL: xxxxacy/
  TWINE_USERNAME: xxxxen__
jobs:
  e2e_tests:
    runs-on: ubuntu-latest
    container:
      image: cimg/python:${{ matrix.python_version }}-node
    strategy:
      matrix:
        python_version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/setup_python_env"
    - uses: "./.github/actions/install_node_dependencies"
    - uses: "./.github/actions/npm_build"
    - name: Run all end to end tests
      run: make e2e-tests
  win_e2e_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/win_setup"
      with:
        python_version: "${{ matrix.python_version }}"          
    - name: Run all end to end tests on Windows
      run: conda activate kedro-viz; make e2e-tests
  unit_tests:
    runs-on: ubuntu-latest
    container:
      image: cimg/python:${{ matrix.python_version }}-node
    strategy:
      matrix:
        python_version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/setup_python_env"
    - uses: "./.github/actions/install_node_dependencies"
    - uses: "./.github/actions/npm_build"
    - name: Run Python tests
      run: make pytest
  win_unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/win_setup"
      with:
        python_version: "${{ matrix.python_version }}"         
    - name: Run Python tests on Windows
      run: conda activate kedro-viz; make pytest
  lint:
    runs-on: ubuntu-latest
    container:
      image: cimg/python:${{ matrix.python_version }}-node
    strategy:
      matrix:
        python_version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/setup_python_env"
    - name: Run secret scan
      run: make secret-scan
    - name: Run security scan
      run: make security-scan
    - name: Verify GraphQL schema is up to date
      run: make schema-check
    - name: Run Python formatters and linters
      run: make format-check lint-check
  javascript_lint_and_tests:
    runs-on: ubuntu-latest
    container:
      image: cimg/python:3.9-node
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/setup_python_env"
    - uses: "./.github/actions/install_node_dependencies"
    - uses: "./.github/actions/setup_cypress_requirements"
    - name: Test lib transpilation
      run: npm run lib
    - name: Test JS library imports
      run: |-
        npm run lib-test:setup
        cd tools/test-lib/react-app
        npm run test:ci
    - name: Run Eslint
      run: npm run lint
    - name: Run JavaScript tests
      run: npm run test:ci
    - name: Run Javascript end to end tests
      run: npm run cy:ci
