{
  "type": "object",
  "patternProperties": {
    "^[a-z0-9-_]+$": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "plotly.JSONDataset"
          ]
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "plotly.JSONDataset"
              }
            }
          },
          "then": {
            "required": [
              "filepath"
            ],
            "properties": {
              "filepath": {
                "type": "string",
                "description": "Filepath in POSIX format to a JSON file prefixed with a protocol like `s3://`.\nIf prefix is not provided `file` protocol (local filesystem) will be used.\nThe prefix should be any protocol supported by ``fsspec``.\nNote: `http(s)` doesn't support versioning."
              },
              "load_args": {
                "type": "object",
                "description": "plotly options for loading JSON files.\nHere you can find all available arguments:\nhttps://plotly.pydata.org/plotly-docs/stable/generated/plotly.read_json.html\nAll defaults are preserved."
              },
              "save_args": {
                "type": "object",
                "description": "plotly options for saving JSON files.\nHere you can find all available arguments:\nhttps://plotly.pydata.org/plotly-docs/stable/generated/plotly.DataFrame.to_json.html\nAll defaults are preserved, but \"index\", which is set to False."
              },
              "credentials": {
                "type": [
                  "object",
                  "string"
                ],
                "description": "Credentials required to get access to the underlying filesystem.\nE.g. for ``GCSFileSystem`` it should look like `{'token': None}`."
              },
              "fs_args": {
                "type": "object",
                "description": "Extra arguments to pass into underlying filesystem class constructor\n(e.g. `{\"project\": \"my-project\"}` for ``GCSFileSystem``), as well as\nto pass to the filesystem's `open` method through nested keys\n`open_args_load` and `open_args_save`.\nHere you can find all available arguments for `open`:\nhttps://filesystem-spec.readthedocs.io/en/latest/api.html#fsspec.spec.AbstractFileSystem.open\nAll defaults are preserved, except `mode`, which is set to `r` when loading\nand to `w` when saving."
              }
            }
          }
        }
      ]
    }
  }
}
